from aiogram import Router, types, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, Message
from store.models import Category, SubCategory, Product

router = Router()

@router.message(F.text == "/catalog")
async def show_categories(callback: CallbackQuery):
    categories = await Category.objects.all().aquery()
    if not categories:
        await callback.message.answer("–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç.")
        return

    keyboard = [
        [InlineKeyboardButton(text=cat.name, callback_data=f"cat_{cat.id}")]
        for cat in categories
    ]
    await callback.message.answer("üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard))

@router.callback_query(F.data.startswith("cat_"))
async def show_subcategories(callback: CallbackQuery):
    cat_id = int(callback.data.split("_")[1])
    subcategories = await SubCategory.objects.filter(category_id=cat_id).aquery()
    if not subcategories:
        await callback.message.answer("–ù–µ—Ç –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π.")
        return

    keyboard = [
        [InlineKeyboardButton(text=sub.name, callback_data=f"sub_{sub.id}")]
        for sub in subcategories
    ]
    await callback.message.answer("üìÅ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard))

@router.callback_query(F.data.startswith("sub_"))
async def show_products(callback: CallbackQuery):
    sub_id = int(callback.data.split("_")[1])
    products = await Product.objects.filter(subcategory_id=sub_id).aquery()
    if not products:
        await callback.message.answer("–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ —ç—Ç–æ–π –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
        return

    for product in products:
        text = f"<b>{product.name}</b>\n\n{product.description}\n\nüíµ –¶–µ–Ω–∞: {product.price} —Ä—É–±."
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üõí –í –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_{product.id}")]
            ]
        )
        await callback.message.answer_photo(photo=product.image_url, caption=text, reply_markup=keyboard)

def register(dp):
    dp.include_router(router)
